Recommender system has been successfully used in many industries, such as e-commerce [15], job search [28], and content streaming [29, 30]. It is also considered an important tool for improving personalised learning experiences in the field of education [31, 32]. The three main recommendation techniques are Collaborative Filtering, Content-Based Filtering, and Hybrid approach [48]. Collaborative Filtering recommends items to a user by analysing their behaviour and suggesting items liked by users with similar interests [34]. It is divided into two approaches: memory-based and model-based [33]. The memory-based collaborative filtering utilises past user interactions to compute similarities, which can be either among users based on the items they have an interaction with (user-based approach) or among items based on the users who have an interaction with them (item-based approach) [42]. The model-based collaborative filtering uses user preferences to build a predictive model, extracting features through machine learning methods such as matrix factorisation [44], neural networks [46] and clustering algorithms [45] to make recommendations [41]. Liu et al. [43] applied a user-based collaborative filtering model to generate recommendations for courses by evaluating user similarities, which can support students in choosing courses and Kusumawardhani et al. [36] implemented a book recommendation system employing item-based collaborative filtering, which assessed the similarity between books by analysing their characteristics. Additionally, Muzdybayeva et al. [35] employed model-based collaborative filtering through matrix factorisation to propose a personalised course recommendation system. This recommendation system was developed by analysing data related to students' previous academic achievements, preferences, and objectives. However, one of the primary challenges in recommender systems, particularly in collaborative filtering models, is the cold-start problem [37], where the system struggles to make recommendations for new users or items due to a lack of historical user interactions and information about preferences or item characteristics. Content-based filtering clusters items that share similar features, takes user preferences into account, and recommends items with comparable characteristics from the dataset [38]. Kusuma and Musdholifah [39] designed a thesis topic recommendation system using content-based filtering. This system collected students' interests in courses and their grades, compared the content of research publications with course descriptions, and recommended publications that align with both the students' interests and their abilities. Unless the recommendation system relies on user-derived features, content-based filtering is effective in addressing the cold-start challenge for new items by examining the characteristics of the new item, measuring its similarity to existing items, and making recommendations without needing extensive user interaction data. However, content-based filtering can still face the user cold-start problem due to the absence of sufficient data for creating a user profile, which can limit its ability to accurately match user preferences with item features [40]. Hybrid approaches generate recommendations by combining various existing recommendation techniques to leverage the strengths of each while minimising their respective drawbacks [49]. For example, several works [50, 51] have proposed to combine collaborative filtering and content-based filtering to offer more accurate recommendations than individual methods. Agarwal et al. [52] aimed to enhance personalisation in Massive Open Online Courses (MOOCs) by developing a hybrid recommendation system that combined cluster-based collaborative filtering with Semantic Web Rule Language (SWRL) rules. This approach provided recommendations for internal course elements and learning paths to improve the learning experience by clustering learners based on their predicted learning styles. To address the cold-start problem, a hybrid recommender system is used [53]. For instance, combing collaborative filtering for existing users or items and content-based filtering for new users or items, depending on user history and time since entering the service, can tackle the cold-start problem. However, limitations arise when item or user descriptions are lacking, leading to low recommendation quality in content-based filtering. In such cases, generic popular items are recommended to mitigate this issue. This research employed collaborative filtering techniques since the dataset primarily comprises interactions between questions and users and lacked sufficient question attributes for the application of content-based filtering.
